THE WIKI


Overview
One of the main reasons I even began to take an interest in the internet is the sheer amount of things there were to read on it.
I hugely value the ability of the web as a service to let me read vast amounts of information about the world, and I thought that a great way to give back
(at least symbolically) would be to create, even if only as a demonstration, a place where users can create and exchange ideas and information.  

Technology
For this project, I used Django, a frontend framework built from the ground up in Python (supporting Python 3).  I used it because it seemed like a great way to introduce myself to 
the use of a database and component-based development.  Django's built in templating engine and Object Relational Mapping came in very, very handy.  
I also used Apache to host, running on a virtual private server maintained by DigitalOcean.  

GitHub / Site


STORMY WEATHER

Overview
This project represented my first foray into more complex application development.  During my time at Seattle University, I consistently pushed myself to go one step beyond,
and this project is one example of this attitude.  I grabbed data from one API, returned it to the view, and sent said data off to another API so that I could return data whose
contents depended upon the data I had already grabbed.  In this case, I grabbed weather data based on the date of concerts I found by searching for artist or location.

Technology
For this project, I used AngularJS, one of the most popular frontend frameworks on the web at the moment.  This framework was chosen so as to be a great introduction to the development concept
of Model-View-Controller, and to give me and the rest of my colleagues the first real test of our app-building skills.  In tandem with AngularJS, I used SASS, Grunt, NPM, and Yeoman to get everything off the ground.

Github / Site


CHESS

Overview
As I kept programming, I started to enjoy challenges based on how I could approach a task logically.  I started going through UW's introductory Computer Science assignments, which were fun, but 
I realized that I wanted something a bit bigger to sink my teeth into; hence, chess!  This is a game all about logic and rules, and building it from the ground up has proven to be just as rewarding
as actually playing it.  

Technology
This is simple, bread and butter WebDev.  Nothing but HTML5, CSS3, and JavaScript (not even Jquery).  In order to make sure I fully understood how to recreate the game, I wanted to reduce the overhead
that comes with a proper framework and let nothing stand in the way of the JavaScript.  It's a fun exercise in DOM manipulation and simple matrix math.

Github / Site

